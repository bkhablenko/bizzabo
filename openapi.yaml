openapi: 3.1.0
info:
  title: TV schedule
  version: v1
  contact:
    name: Bohdan Khablenko
    url: https://github.com/bkhablenko
    email: 8275828+bkhablenko@users.noreply.github.com
  license:
    name: The MIT License
    identifier: MIT
  description: |
    # Authentication

    Users may authenticate with any username as long as they provide an empty password.

    **NOTE:** For demonstration purposes only.

servers:
  - url: http://localhost:8080/api/v1

paths:
  /user/schedule/shows:
    get:
      summary: Get the TV schedule
      security:
        - basicAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Show'
        '401':
          description: Unauthorized
        default:
          $ref: '#/components/responses/ErrorResponse'

    post:
      summary: Add a show to the TV schedule
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                showId:
                  type: integer
                  description: TVmaze show ID.
                  example: 82
              required:
                - showId
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        default:
          $ref: '#/components/responses/ErrorResponse'

  /user/schedule/shows/{showId}:
    parameters:
      - name: showId
        in: path
        schema:
          type: integer
          example: 82
        description: TVmaze show ID.
        required: true
    delete:
      summary: Remove a show from the TV schedule
      security:
        - basicAuth: []
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        default:
          $ref: '#/components/responses/ErrorResponse'

  /user/schedule/watch-next:
    get:
      summary: Get the next unwatched episode for each show on the TV schedule
      security:
        - basicAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WatchNextItem'
        '401':
          description: Unauthorized
        default:
          $ref: '#/components/responses/ErrorResponse'

  /user/watched-episodes:
    post:
      summary: Mark an episode as watched
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                episodeId:
                  type: integer
                  description: TVmaze episode ID.
                  example: 4952
              required:
                - episodeId
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        default:
          $ref: '#/components/responses/ErrorResponse'

  /user/watched-episodes/{episodeId}:
    parameters:
      - name: episodeId
        in: path
        schema:
          type: integer
          example: 4952
        description: TVmaze episode ID.
        required: true
    delete:
      summary: Remove a watched episode
      security:
        - basicAuth: []
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        default:
          $ref: '#/components/responses/ErrorResponse'

components:
  securitySchemes:
    basicAuth:
      description: |
        See [Authentication](#section/Authentication) for details.
      type: http
      scheme: basic

  schemas:
    CastMember:
      type: object
      properties:
        id:
          type: integer
          description: TVmaze person ID.
          example: 14075
        fullName:
          type: string
          example: Kit Harington
        imageUrl:
          type: string
          format: uri
          example: https://static.tvmaze.com/uploads/images/original_untouched/1/3229.jpg

    Show:
      type: object
      properties:
        id:
          type: integer
          description: TVmaze show ID.
          example: 82
        title:
          type: string
          example: Game of Thrones
        imageUrl:
          type: string
          format: uri
          example: https://static.tvmaze.com/uploads/images/original_untouched/190/476117.jpg
        cast:
          type: array
          items:
            $ref: '#/components/schemas/CastMember'

    ShowEpisode:
      type: object
      properties:
        id:
          type: integer
          description: TVmaze episode ID.
          example: 4952
        title:
          type: string
          example: Winter is Coming
        season:
          type: integer
          example: 1
        number:
          type: integer
          example: 1
        airDate:
          type: string
          format: date
          example: 2011-04-17

    WatchNextItem:
      type: object
      properties:
        show:
          $ref: '#/components/schemas/Show'
        nextEpisode:
          $ref: '#/components/schemas/ShowEpisode'

  responses:
    ErrorResponse:
      description: Something went awfully wrong.
